#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    Aug 12, 2022 07:08:19 PM JST  platform: Windows NT
import logging
import os
import pathlib
import shutil
import tkinter as tk

from gui import chem
from util.analize_xml import create_ChemDatas, ChemData
from util.search_chemSRPA_files import copy_chemSHRPA_datas, SUFFIX, folder_dialog, file_dialog
from Constant import *

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol('WM_DELETE_WINDOW', root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = chem.Toplevel1(_top1)

    root.mainloop()


def BT_cancel(*args):
    def delete_temp_files():
        """ tempファイルの中身を削除 """
        if pathlib.Path(TEMP_DIR).exists():
            shutil.rmtree(TEMP_DIR)
        if pathlib.Path(UNZIP_TEMP_DIR).exists():
            shutil.rmtree(UNZIP_TEMP_DIR)
        os.mkdir(TEMP_DIR)
        os.mkdir(UNZIP_TEMP_DIR)

    delete_temp_files()
    root.destroy()


def BT_output(*args):
    # chemSHRPAデータを集める
    copy_chemSHRPA_datas(search_folder=_w1.Entry1.get(), suffix=SUFFIX.SHAI)

    # 収集したデータをモデル化
    chemDatas = create_ChemDatas()

    # モデルデータをcsv出力
    ChemData.to_csv(chemDatas, _w1.Entry2.get())

    # メッセージボックス（情報）
    tk.messagebox.showinfo("情報", "ファイル出力しました。")


def BT_select_output_file(*args):
    search_folder = _w1.Entry2.get()

    # フォルダがない場合
    if not pathlib.Path(search_folder).exists() or search_folder == "":
        search_folder = None
    search_folder = file_dialog(search_folder)

    _w1.Entry2.delete(0, tk.END)  # Entryの削除
    _w1.Entry2.configure(state='normal')
    _w1.Entry2.insert(0, search_folder)
    _w1.Entry2.configure(state='readonly')


def BT_select_serch_folder(*args):
    search_folder = _w1.Entry1.get()

    # フォルダがない場合
    if not pathlib.Path(search_folder).exists() or search_folder == "":
        search_folder = None
    search_folder = folder_dialog(search_folder)

    _w1.Entry1.delete(0, tk.END)  # Entryの削除
    _w1.Entry1.configure(state='normal')
    _w1.Entry1.insert(0, search_folder)
    _w1.Entry1.configure(state='readonly')


if __name__ == '__main__':
    chem.start_up()
